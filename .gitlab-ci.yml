stages:
  - test
  - container

.test:
  image: debian:stable
  stage: test
  before_script:
    - apt-get update
    - apt-get install python3 python3-distutils curl git -y
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
    - source $HOME/.poetry/env
    - poetry --version
    - poetry install -vv -E facebook -E signal -E telegram

pytest:
  extends: .test
  script:
    - poetry run pytest tests

mypy:
  extends: .test
  script:
    - poetry run mypy slidge

black:
  extends: .test
  script:
    - poetry run black --check slidge

.docker:
  stage: container
  image: docker.io/library/fedora:36
  before_script:
    - dnf install podman -y
    - podman login -u ${CI_REGISTRY_USER} --password ${CI_REGISTRY_TOKEN} ${CI_REGISTRY}
    - mv Dockerfile Dockerfile-full
    - sed -n '/.*AS poetry/,/.*AS slidge-dev/p' Dockerfile-full | head -n -1 > Dockerfile   # skip the useless stages, since podman builds it all
    - podman build .  # build everything once
  script:
    - podman build . --target slidge-${LEGACY_NAME} --tag ${CI_REGISTRY_IMAGE_PREFIX}-${LEGACY_NAME}:latest
    - podman push ${CI_REGISTRY_IMAGE_PREFIX}-${LEGACY_NAME}:latest

facebook:
  extends: .docker
  variables:
    LEGACY_NAME: "facebook"

signal:
  extends: .docker
  variables:
    LEGACY_NAME: "signal"

telegram:
  extends: .docker
  variables:
    LEGACY_NAME: "telegram"
